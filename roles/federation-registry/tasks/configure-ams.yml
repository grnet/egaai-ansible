---
  - name: Create deployment_response topic
    uri:
      url: "{{ federation_registry_ams.host }}/projects/{{ federation_registry_ams.project }}/topics/{{ federation_registry_ams.topic }}?key={{ federation_registry_ams.token }}"
      method: PUT
      return_content: yes
    register: response
    failed_when: response.status != 409 and response.status != 200

  - name: Modify acl for topic
    uri:
      url: "{{ federation_registry_ams.host }}/projects/{{ federation_registry_ams.project }}/topics/{{ federation_registry_ams.topic }}:modifyAcl?key={{ federation_registry_ams.token }}"
      body: "{{lookup('template','ams_authorized_users.j2')}}"
      method: POST
      return_content: yes
      headers:
        Content-Type: "application/json"
      body_format: json

  - name: Delete express push subscription
    uri:
      url: "{{ federation_registry_ams.host }}/projects/{{ federation_registry_ams.project }}/subscriptions/{{ federation_registry_ams.sub }}?key={{ federation_registry_ams.token }}"
      method: DELETE
      return_content: yes

  - name: Create express push subscription
    uri:
      url: "{{ federation_registry_ams.host }}/projects/{{ federation_registry_ams.project }}/subscriptions/{{ federation_registry_ams.sub }}?key={{ federation_registry_ams.token }}"
      method: PUT
      body: "{{lookup('template','ams_push_body.j2')}}"
      headers:
        Content-Type: "application/json"
      body_format: json
      return_content: yes
    register: post_ams_push_config_response

  - name: Get express push subscription
    uri:
      url: "{{ federation_registry_ams.host }}/projects/{{ federation_registry_ams.project }}/subscriptions/{{ federation_registry_ams.sub }}?key={{ federation_registry_ams.token }}"
      method: GET
      return_content: yes
    register: get_ams_push_response
    ignore_errors: yes
    when: "post_ams_push_config_response is defined"

  - name: Save Ams Facts
    set_fact:
      ams_auth_key: "{{get_ams_push_response.json.pushConfig.authorization_header.value}}"
      ams_verif_hash: "{{get_ams_push_response.json.pushConfig.verification_hash}}"
    when:
      - "get_ams_push_response.json.pushConfig.authorization_header.value is defined"
      - "get_ams_push_response.json.pushConfig.verification_hash is defined"

  - name: Save Ams verified
    set_fact:
      ams_is_verif: "{{get_ams_push_response.json.pushConfig.verified}}"
    when: "get_ams_push_response.json.pushConfig.verified is defined"

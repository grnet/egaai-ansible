---
# if the keycloak archive is from the "stage" branch, then you might enable the wayf plugin (keycloak-theme-vanilla)
keycloak_archive_url: "https://github.com/keycloak/keycloak/releases/download/13.0.0/keycloak-13.0.0.tar.gz"

##in format X.Y.Z
keycloak_version: "13.0.0"

keycloak_admin_username: "<SET AN ADMIN USER>"
keycloak_admin_password: "<SET AN ADMIN PASS>"

keycloakdb:
  name: "<KEYCLOAK DB NAME>"
  user: "<DB USERNAME>"
  pass: "<DB USER PASSWORD>"


# Email address for important account notifications. For example, Letâ€™s Encrypt will automatically send
# expiry notices to this email address when your certificate is coming up for renewal
#letsencrypt_email: "bob.builder@example.org"

### plugins
### wayf plugin works ONLY with "stage" branch of keycloak (need to have commit fe055820980dbcb79d5aae2b4dce78b840b912b0)
keycloak_plugins:
  wayf:
    enabled: true
    name: "keycloak-theme-vanilla"
    jar_url: "<location of plugin jar>"
    modulexml_url: "https://raw.githubusercontent.com/eosc-kc/keycloak-theme-vanilla/master/module.xml"
    isTheme: true
    add_to_realms:
      - "master"
  idp_hashedid_mapper:
    enabled: true
    name: "keycloak-idp-hashedId-mapper"
    jar_url: "<location of plugin jar>"
    modulexml_url: "https://raw.githubusercontent.com/eosc-kc/keycloak-idp-hashedId-mapper/master/module.xml"
    isTheme: false


### Remaining configuration (enc keys, social IdPs, AUP config, SMTP config, etc)
### you can have more than one realms configured here (if it doesn't exist, it will be created). just copy the format of the master and add it in the list.
### also, you can just comment out any of the {key, aup, smtp} sub trees and let the remaining get configured
config:
  realms:
    - name: master
      key:
        privateKey: "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC4118OxJwQVfQu va+0g+aXLPyi8DjpllYDfl7zk7vDdfHJy8KxJdraZkgdkUoS7DDU1Rs77uFpGafI ETPtBo1/aNjzvSiq5qWTY/y4guwZ3ZurPLpmQmLPnVzoqsUj3GIf51RBcVwWgZe7 hwtZ4YqmlhgIsc1n+ijtq5nGcRJrRHOHrQpVEV0qW+ydbFp4DjHwQDw6Mmco4G2k 64tw+7iFNaojsSxcTmOGkasb+VPL4R0RdtGSl6fiboNYwb8mXR3aqafsQy2fGFiq RNoUDIBxLUpOnEkiLfqmz6YcJLnKR2j0NTXptM90ap4rgf4SjButJd6VQyGxfoBV YMii5wQ1AgMBAAECggEAKStnM73c2NKcOZDsQrOiN4fAmXYR5w0iCVMrSOtdxdJO UVj9+0DoNv7TDyreKcrLsYvprfat5B/fu/MA8skj2P38XIWEOlR3CpYZouseNUCj vIchKUeeBIoTOItYr30Vqe93V8As96JTrmQMxi8zF5mUrtMTYhZY6V7wOD/VD2jl XGfC9ywcrzd+8Xpx2kXzTbpLvEzcviNYfANKiBzkUGEyhttwNBjInukCs4+ac5JT HyZ8OKKiQ7bAY/09PmyvZ44K5bTrs0JPt3G98UqxtFpu82dIRw867dmq7V9dh0B6 Cp75cRorG6PwMYPIKFF328/8gazi98xsqifO3xUOYQKBgQDt4FWQhsOz6aPi9+zO vrfQI+pnkHGsu+Uo55uQaDDbOg+AbpeRzTX/pcHJg+qzHokh0nqh1daE5x5v/XX7 fq0hGg3itRLLqi0DadFj5loecBjptyYSA15d06fCU1MOAxrZs03C4sL7gRJ03z0Z 7SdN5M17alFgZ4+zW8O4iSlELQKBgQDG7J0zJaP3qKUhCtw1wiUXLiag1Ass9ySl nL+icY5ecAEx3I+P8G45r/49lmc6iJsWLQQE9dw3gy2hIxx16mcV4UGQti8K6chT 8NI2PCMHTDEZVpXOe8mq3wk4UPFUHO8ejbg4AsuFhk+Nm0KQfR/pfMuADvtstZLB AQqRmhodKQKBgQCF8AudnhPxaHuL37cpzf8npiFlANLQxNdKSeawz8m6lp2F3j9f rCFcedN8iNeM1YO3VJESMJpiKNRdkGRvICuReN8aqIQVwxMnWdy5mElj3BBbAHHi MJ1gzT0nUM1yFVN4AtqlAhNxk4J15gC8aWj5FfyRIhMB6i3ieqfgbvKaXQKBgH5l VjVrk1YH2HS4W9fktoCWGIFUeo1ls+lvQezLzrR+4qN2C9pf4QnSo+8qJAlzR2e9 zrIALp8vQM0EbE8YU8v5RxnWSOncRiff+xHvACrg5Mm+1I1Q5oEmGsun0s+pWt7F GeqtC/iZsO6/WnpIpwBLBVsnKeaXMNpl+PsvOayRAoGBAKVhjJ88khSwAdC7br+1 0MPfepSDDcP6pgwihmn38s9AEBvm70bdz0/UGUUU22iPXpmf15AVwHGU0N4rNJ9K uSpdS2mTl8tfTMgyxuI4MLw7gJQ0+tFY5ck5fFpbCqRlBC392Y+hTDcGHNTqt6XR 0jsopVB5RvwODEarZVmzlLCT"
        certificate: "MIID2TCCAsGgAwIBAgIUXor6fFD/leo8ZhwLXp5Zsdt2UJgwDQYJKoZIhvcNAQEL BQAwfDELMAkGA1UEBhMCR1IxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDESMBAGA1UEAwwJbG9jYWxob3N0MSEw HwYJKoZIhvcNAQkBFhJsYXNrYXJpc25AZ3JuZXQuZ3IwHhcNMjEwNzEyMTMzNjEy WhcNMjIwNzEyMTMzNjEyWjB8MQswCQYDVQQGEwJHUjETMBEGA1UECAwKU29tZS1T dGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMRIwEAYDVQQD DAlsb2NhbGhvc3QxITAfBgkqhkiG9w0BCQEWEmxhc2thcmlzbkBncm5ldC5ncjCC ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALjXXw7EnBBV9C69r7SD5pcs /KLwOOmWVgN+XvOTu8N18cnLwrEl2tpmSB2RShLsMNTVGzvu4WkZp8gRM+0GjX9o 2PO9KKrmpZNj/LiC7Bndm6s8umZCYs+dXOiqxSPcYh/nVEFxXBaBl7uHC1nhiqaW GAixzWf6KO2rmcZxEmtEc4etClURXSpb7J1sWngOMfBAPDoyZyjgbaTri3D7uIU1 qiOxLFxOY4aRqxv5U8vhHRF20ZKXp+Jug1jBvyZdHdqpp+xDLZ8YWKpE2hQMgHEt Sk6cSSIt+qbPphwkucpHaPQ1Nem0z3RqniuB/hKMG60l3pVDIbF+gFVgyKLnBDUC AwEAAaNTMFEwHQYDVR0OBBYEFKaydpXaLklUpHLQ+oAHjd8te0u9MB8GA1UdIwQY MBaAFKaydpXaLklUpHLQ+oAHjd8te0u9MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZI hvcNAQELBQADggEBAKkipmJoa5THVotuvpRrbbs3QGLJLnGWOVlLNop4fB3QyOn3 ehr62/AWzYt7bnUlFvS01myZt8r0CFYVcmVaf2AMNDRyFt/9LSSYBivwWKMTaqdr 3c0WlmOYjbEFVbjydB/4txj6kiyx3qkqNBQyyuEfe3xfi80MlMqU9hdsGJyyRb7N LgYz4OWOwr3WArHuGMB+GuQ7eBSAygpzMA6pyj3FnHss+CCbJrp/HGQaaGF1Rpr2 47HgdAuVY+aq+exoVm4bdOgeZiKt5jvrFT+VcYzaW5UaAv/IbqqwGD8ZSro0WSX4 T8CC2svSJ/tu7cGmgtpzlPxXpUYj8L5gX5mWK9Y="
        algorithm: "RSA256"
      aup:
        enabled: true
        defaultAction: true
        reset_every: 165  # it goes (reset_every * reset_every_multiplier) seconds
        reset_every_multiplier: 3600 # use 3600 for hours, 86400 for days
      smtp:
        host: "smtp.example.com"
        from_email: "noreply@example.com"
        port: 25
        ## values below are optional
        enable_ssl: true
        enable_starttls: true
        from_name: ""
        reply_to_name: ""
        reply_to_email: ""
        envelope_from: ""
        auth_enabled: false
        auth_username: ""
        auth_password: ""
      social_idps:
        - providerId: "google" #do not change this
          alias: "google"  #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
            hostedDomain: ""
            userIp: ""  #boolean
            offlineAccess: ""  #boolean
            conditionalTrustEmail: "" #boolean
        - providerId: "github" #do not change this
          alias: "github"  #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "linkedin" #do not change this
          alias: "linkedin"  #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "facebook" #do not change this
          alias: "facebook"  #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            addReadTokenRoleOnCreate: ""
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
            fetchedFields: ""
        - providerId: "instagram" #do not change this
          alias: "instagram" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "microsoft" #do not change this
          alias: "microsoft" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "bitbucket" #do not change this
          alias: "bitbucket" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"  # consumer key
            clientSecret: "<CLIENT SECRET>"  # consumer secret
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "twitter" #do not change this
          alias: "twitter" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "gitlab" #do not change this
          alias: "gitlab" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"  # application id
            clientSecret: "<CLIENT SECRET>"  # application secret
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "paypal" #do not change this
          alias: "paypal" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            sandbox: ""  #boolean
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "stackoverflow" #do not change this
          alias: "stackoverflow" #do not change this
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            key: "<USE A KEY>"
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            acceptsPromptNoneForwardFromClient: ""
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
            defaultScope: ""
        - providerId: "openshift-v4" #do not change this
          alias: "use-an-alias-here-too"
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            baseUrl: ""
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean
        - providerId: "openshift-v3" #do not change this
          alias: "use-an-alias-here-too"
          trustEmail: ""  #boolean
          storeToken: ""   #boolean
          linkOnly: ""    #boolean
          firstBrokerLoginFlowAlias: "first broker login"
          postBrokerLoginFlowAlias: ""
          enabled: true
          authenticateByDefault: false
          addReadTokenRoleOnCreate: ""
          config:
            clientId: "<CLIENT ID>"
            clientSecret: "<CLIENT SECRET>"
            baseUrl: ""
            useJwksUrl: "true"
            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
            disableUserInfo: ""  #boolean
            hideOnLoginPage: ""  #boolean
            promotedLoginbutton: ""   #boolean


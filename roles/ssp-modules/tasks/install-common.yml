---


- name: Install unzip
  package:
    name: unzip
    state: latest
  become: yes


- name: Checkout SSP modules source
  git:
    repo: "{{ item.repo_url }}"
    dest: "{{ item.path }}"
    version: "{{ item.version }}"
    accept_hostkey: yes
    force: no
    update: yes
  become: yes
  with_items: "{{ ssp_mods_extra_enabled }}"
  when: item.repo_url is defined


- name: Remove/Disable SSP modules (1/2)
  file:
    path: "{{ item.module_path }}"
    state: absent
  become: yes
  with_items: "{{ ssp_mods_extra_disabled }}"
  tags:
    - ssp_modules:config:remove
  when: ssp_mods_extra_disabled is defined

- name: Remove/Disable SSP modules (2/2)
  file:
    path: "{{ item.dest_config_path }}"
    state: absent
  become: yes
  with_items: "{{ ssp_mods_extra_disabled }}"
  when: (ssp_mods_extra_disabled is defined) and (item.dest_config_path is defined)
  tags:
    - ssp_modules:config:remove


- name: Download & unarchive to /tmp/ ( zip only )
  unarchive:
    src: "{{ item.zip_url }}"
    dest: "/tmp/"
    creates: "{{ item.path }}/{{ item.version }}"
    remote_src: yes
  become: yes
  with_items: "{{ ssp_mods_extra_enabled }}"
  when: item.zip_url is defined
  register: zip_downloaded


- name: Move unarchived module files from /tmp/ to module directory (zip only) [1/3]
  command: "mv /tmp/{{ item.fullname }} {{ item.path }}"
  become: yes
  with_items: "{{ ssp_mods_extra_enabled }}"
  when: zip_downloaded.changed and item.zip_url is defined and item.fullname is defined

- name: Set a version file in module directory (zip only) [2/3]
  copy:
    content: ""
    dest: "{{ item.path }}/{{ item.version }}"
    force: no
    owner: "root"
    group: "root"
    mode: "0644"
  become: yes
  with_items: "{{ ssp_mods_extra_enabled }}"
  when: zip_downloaded.changed and item.zip_url is defined and item.fullname is defined


- name: Remove unused directories from /tmp/ (zip only) [3/3]
  file:
    path: "/tmp/{{ item.fullname }}"
    state: absent
  become: yes
  with_items: "{{ ssp_mods_extra_enabled }}"
  when: zip_downloaded.changed and item.zip_url is defined and item.fullname is defined




- name: Create PostgreSQL tables for SSP modules via SQL scripts
  postgresql_query:
    db: "{{ item.db_name }}"
    login_user: "{{ item.db_username }}"
    login_password: "{{ item.db_password }}"
    path_to_script: "{{ item.db_script_path }}"
    login_host: "{{ item.db_host }}"
    #positional_args:
    #- 1
  register: postgresql_result
  failed_when: "postgresql_result is failed and 'already exists' not in postgresql_result.msg"
  with_items: "{{ ssp_modules_db }}"
  when: "ssp_modules_db is defined"



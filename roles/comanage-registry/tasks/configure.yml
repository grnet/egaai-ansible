---
- name: Configure COmanage Registry database connections
  template:
    src: "database.php.j2"
    dest: "{{ comanage_path }}/local/Config/database.php"
    owner: "{{ comanage_webserver_user }}"
    group: "{{ comanage_webserver_group }}"
    mode: 0600
    backup: yes
  become: yes

- name: Configure COmanage Registry email settings
  template:
    src: "email.php.j2"
    dest: "{{ comanage_path }}/local/Config/email.php"
    owner: "{{ comanage_webserver_user }}"
    group: "{{ comanage_webserver_group }}"
    mode: 0600
    backup: yes
  become: yes

- name: Ensure COmanage Registry logo is copied
  copy:
    src: "{{ comanage_logo }}"
    dest: "{{ comanage_path }}/local/webroot/img/logo.png"
    owner: "root"
    group: "root"
    mode: 0644
    backup: yes
  when: 'comanage_logo is defined'
  become: yes

- name: Ensure COmanage Registry favicon is copied
  copy:
    src: "{{ comanage_favicon }}"
    dest: "{{ comanage_path }}/app/webroot/favicon.ico"
    owner: "root"
    group: "root"
    mode: 0644
    backup: yes
  when: 'comanage_favicon is defined'
  become: yes

- name: Ensure COmanage Registry public static pages are copied
  copy:
    src: "{{ comanage_public_pages_dir }}/"
    dest: "{{ comanage_path }}/local/View/Pages/public/"
    owner: "root"
    group: "root"
    mode: 0644
    backup: yes
  when: 'comanage_public_pages_dir is defined'
  become: yes

- name: Configure COmanage Registry app/webroot/.htaccess
  blockinfile:
    dest: "{{ comanage_path }}/app/webroot/.htaccess"
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: "EOF"
    content: "{{ comanage_app_webroot_htaccess  }}"
  when:
    - comanage_app_webroot_htaccess is defined
    - groups.cache is defined
    - groups.cache | length > 0
  become: yes

- name: Configure COmanage Registry auth session name
  lineinfile:
    dest: "{{ item }}"
    regexp: "^session_name"
    line: 'session_name("{{ comanage_session_name }}");'
  with_items:
    - "{{ comanage_path }}/app/webroot/auth/login/index.php"
    - "{{ comanage_path }}/app/webroot/auth/logout/index.php"
  become: yes

- name: Configure COmanage Registry session settings
  template:
    src: "core.php.j2"
    dest: "{{ comanage_path }}/app/Config/core.php"
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: 'comanage_session_conf is defined'
  become: yes

- name: Configure COmanage Registry logout location
  replace:
    dest: "{{ comanage_path }}/app/webroot/auth/logout/index.php"
    backup: yes
    regexp: '\/registry\/users\/logout'
    replace: "{{ comanage_logout_location }}"
  when: 'comanage_logout_location is defined'
  become: yes

- name: Configure COmanage Registry timezone cookie name
  replace:
    dest: "{{ item }}"
    backup: yes
    regexp: "cm_registry_tz_auto"
    replace: "{{ comanage_timezone_cookie_name }}"
  with_items:
    - "{{ comanage_path }}/app/Controller/AppController.php"
    - "{{ comanage_path }}/app/View/Layouts/default.ctp"
    - "{{ comanage_path }}/app/View/Layouts/lightbox.ctp"
  when: 'comanage_timezone_cookie_name is defined'
  become: yes

# Initialize the database. This should be executed during installation
- include_tasks: db_initialize.yml
  when: comanage_db_initialize

# Update the schema of the database
- include_tasks: db_update.yml
  when: comanage_schema_updates is defined

# Apply same salt and seed for all COmanage instances
- include_tasks: security.yml

- name: Clear COmanage Registry cache
  shell: Console/cake cache clear
  args:
    chdir: "{{ comanage_path }}/app"
  become: yes
  register: CManageCache
  failed_when: '"Done clearing cache" not in CManageCache.stdout'
...